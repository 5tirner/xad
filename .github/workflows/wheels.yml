name: Python Wheels
on: [workflow_dispatch, push, pull_request]
jobs:
  build_wheels:
    name: Wheels
    strategy:
      fail-fast: false
      matrix:
        buildplat: ["manylinux_x86_64", "musllinux_x86_64", "macosx_x86_64", "win_amd64"]
        python: ["cp38", "cp39", "cp310", "cp311", "cp312"]
        include:
          - buildplat: "manylinux_x86_64"
            os: ubuntu-20.04
            python_exe: "$(which python)"
          - buildplat: "musllinux_x86_64"
            os: ubuntu-20.04
            python_exe: "$(which python)"
          - buildplat: "macosx_x86_64"
            os: "macos-12"
            python_exe: "$(which python)"
          - buildplat: "win_amd64"
            os: windows-2022
            python_exe: "python"
        exclude:
          # gives "is not a supported wheel on this platform" for some reason
          - buildplat: "macosx_x86_64"
            python: "cp38"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      - uses: actions/setup-python@v5
        with:
          python-version: 3.x 
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat }}
          CIBW_BEFORE_BUILD: pip install poetry && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DXAD_ENABLE_TESTS=OFF -DXAD_ENABLE_PYTHON=ON -DPYTHON_EXECUTABLE=${{ matrix.python_exe }} -DXAD_STATIC_MSVC_RUNTIME=ON && cmake --build . --config Release
          CIBW_TEST_COMMAND: pytest {package}/tests
          CIBW_TEST_REQUIRES: pytest
        with:
          package-dir: bindings/python
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.python }}-${{ matrix.buildplat }}
          path: ./wheelhouse/*.whl
          if-no-files-found: error

  upload_all:
    needs: build_wheels
    environment: 
      name: testpypi
      url: https://test.pypi.org/p/xad-autodiff
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@v1.8.12
        with:
          verbose: true
          repository-url: https://test.pypi.org/legacy/
